==========================================================
v1.2.6 リリース前に発見・修正したバグ
==========================================================

【バグ #1】UTF-8 BOM自動付与の問題
-----------------------------------------------------------
深刻度: 高（リリースブロッカー）
発見日時: 2025-10-09 21:30

■ 問題の詳細
ファイル: PowerShell.MCP\Cmdlets\TextFileUtility.cs
メソッド: DetectEncoding()
行番号: 90

現象:
- UTF-8 BOMなしファイルを編集すると、BOMが自動的に追加される
- リリースノートで「エンコーディング保持」を謳っているが、実際には保持されない

原因:
`csharp
// 問題のあるコード（修正前）
if (detector.Charset != null && detector.Confidence > 0.7)
{
    try
    {
        return Encoding.GetEncoding(detector.Charset);  // ← UTF-8の場合BOM付きを返す
    }
    ...
}
`

Udeライブラリが"UTF-8"を返すと、.NETのEncoding.GetEncoding("UTF-8")は
BOM付きUTF-8エンコーディングを返すため、元のBOMなし属性が失われる。

■ 修正内容
`csharp
// 修正後のコード
if (detector.Charset != null && detector.Confidence > 0.7)
{
    try
    {
        // UTF-8の場合は明示的にBOMなしを返す
        if (detector.Charset.Equals("UTF-8", StringComparison.OrdinalIgnoreCase))
        {
            return new UTF8Encoding(false);
        }
        return Encoding.GetEncoding(detector.Charset);
    }
    ...
}
`

UTF-8が検出された場合、明示的に
ew UTF8Encoding(false)を返すように修正。

■ 影響範囲
- Add-LinesToFile
- Update-LinesInFile
- Update-MatchInFile
- Remove-LinesFromFile
- すべてのテキストファイル編集cmdlet

■ テスト結果
修正前: ❌ UTF-8 BOMなしファイルにBOMが追加される
修正後: ✅ UTF-8 BOMなしファイルのBOMなし属性が保持される

■ バックアップ
修正前のファイル: TextFileUtility.cs.20251009213240.bak

-----------------------------------------------------------
修正完了: ✅
テスト済み: ✅
リリース可能: ✅
-----------------------------------------------------------
