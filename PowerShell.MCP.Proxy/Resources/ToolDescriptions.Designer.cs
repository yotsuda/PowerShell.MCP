//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PowerShell.MCP.Proxy.Resources {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ToolDescriptions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ToolDescriptions() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PowerShell.MCP.Proxy.Resources.ToolDescriptions", typeof(ToolDescriptions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   If true, executes the command immediately and returns the result. If false, inserts the command into the console for manual execution. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Param_ExecuteImmediately {
            get {
                return ResourceManager.GetString("Param_ExecuteImmediately", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The PowerShell command or pipeline to execute. When execute_immediately=true (immediate execution), both single-line and multi-line commands are supported, including if statements, loops, functions, and try-catch blocks. When execute_immediately=false (insertion mode), only single-line commands are supported - use semicolons to combine multiple statements into a single line. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Param_Pipeline {
            get {
                return ResourceManager.GetString("Param_Pipeline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Retrieves the current location and all available drives (providers) from the PowerShell session. Returns current_location and other_drive_locations array. Call this when you need to understand the current PowerShell context, as users may change location during the session. When executing multiple invoke_expression commands in succession, calling once at the beginning is sufficient. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Tool_GetCurrentLocation {
            get {
                return ResourceManager.GetString("Tool_GetCurrentLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Execute PowerShell commands in the PowerShell console. Supports both immediate execution and command insertion modes.
        ///
        ///⚠ IMPORTANT - Verbose/Debug Output Streams:
        ///Verbose and Debug streams are NOT captured and NOT visible to the LLM. These streams display only in the user&apos;s console. If you need verbose/debug information from a command, ask the user to copy it from the console and share it with you.
        ///
        ///⚠ IMPORTANT - Variable Scope:
        ///Local variables are NOT preserved between invoke_expression calls. Use $script: [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Tool_InvokeExpression {
            get {
                return ResourceManager.GetString("Tool_InvokeExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Launch a new PowerShell console window with PowerShell.MCP module imported. This tool should only be executed when explicitly requested by the user or when other tool executions fail. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Tool_StartPowershellConsole {
            get {
                return ResourceManager.GetString("Tool_StartPowershellConsole", resourceCulture);
            }
        }
    }
}
